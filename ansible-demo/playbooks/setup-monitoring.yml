---
- name: Setup Demo Monitoring Infrastructure
  hosts: monitoring_servers
  become: yes
  vars:
    prometheus_version: "2.45.0"
    grafana_version: "10.0.0"
    node_exporter_version: "1.6.0"

  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install required packages
      apt:
        name:
          - wget
          - curl
          - tar
          - adduser
          - libfontconfig1
          - apt-transport-https
          - software-properties-common
        state: present

    - name: Create prometheus user
      user:
        name: prometheus
        system: yes
        shell: /bin/false
        home: /var/lib/prometheus
        create_home: yes

    - name: Create prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Download and install Prometheus
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
        creates: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"

    - name: Copy Prometheus binaries
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        remote_src: yes
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - prometheus
        - promtool

    - name: Create Prometheus configuration
      copy:
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s

          rule_files:
            # - "first_rules.yml"
            # - "second_rules.yml"

          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']

            - job_name: 'demo-web-servers'
              static_configs:
                - targets: 
                  - '172.20.10.21:9100'  # Web AZ1-1
                  - '172.20.10.22:9100'  # Web AZ1-2
                  - '172.20.20.21:9100'  # Web AZ2-1
                  - '172.20.20.22:9100'  # Web AZ2-2

            - job_name: 'demo-app-servers'
              static_configs:
                - targets:
                  - '172.20.10.23:9100'  # App Alpha AZ1
                  - '172.20.10.24:9100'  # App Beta AZ1
                  - '172.20.20.23:9100'  # App Alpha AZ2
                  - '172.20.20.24:9100'  # App Beta AZ2

            - job_name: 'demo-management'
              static_configs:
                - targets:
                  - '172.20.5.10:9100'   # VPN Server
                  - '172.20.10.25:9100'  # NTP/DNS Server
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: restart prometheus

    - name: Create Prometheus systemd service
      copy:
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
            --config.file=/etc/prometheus/prometheus.yml \
            --storage.tsdb.path=/var/lib/prometheus/ \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries \
            --web.listen-address=0.0.0.0:9090 \
            --web.enable-lifecycle

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/prometheus.service
      notify:
        - reload systemd
        - restart prometheus

    - name: Start and enable Prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes

    - name: Add Grafana APT key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana APT repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - name: Install Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Configure Grafana
      copy:
        content: |
          [server]
          http_addr = 0.0.0.0
          http_port = 3000

          [security]
          admin_user = admin
          admin_password = DemoGrafanaPassword123!

          [database]
          type = sqlite3
          path = grafana.db

          [session]
          provider = memory

          [analytics]
          reporting_enabled = false
        dest: /etc/grafana/grafana.ini
        backup: yes
      notify: restart grafana

    - name: Start and enable Grafana
      systemd:
        name: grafana-server
        state: started
        enabled: yes

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart prometheus
      systemd:
        name: prometheus
        state: restarted

    - name: restart grafana
      systemd:
        name: grafana-server
        state: restarted